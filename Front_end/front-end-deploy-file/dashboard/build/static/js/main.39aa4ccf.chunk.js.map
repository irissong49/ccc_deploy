{"version":3,"sources":["charts/BarChartCity.js","charts/BarChart.js","charts/MixChart.js","components/Menu.js","components/images/food1.jpeg","components/images/food2.jpeg","components/Wiki.js","components/LeaderBoard.js","charts/Doughnut.js","App.js","reportWebVitals.js","index.js"],"names":["BarChartCity","props","chartRef","React","createRef","this","myChart","data","labels","label","datasets","value","update","Chart","current","type","backgroundColor","yAxisID","options","maintainAspectRatio","responsive","scales","A","position","title","gridLines","color","B","grid","display","plugins","text","fontSize","legend","ref","Component","BarChart","entries","i","city","MixChart","cityData","Object","keys","values","Menu","startStream","stopStream","className","to","onClick","Wiki","href","target","rel","src","food1","alt","food2","LeaderBoard","useState","setData","fetchData","a","fetch","method","headers","Headers","Authorization","btoa","then","response","json","map","row","sort","b","catch","err","console","error","useEffect","interval","setInterval","clearInterval","Table","striped","bordered","hover","val","index","DoughnutChart","borderColor","borderDash","hidden","elements","point","radius","App","setType","setCityData","foodMask","setFoodMask","maskedData","setMaskedData","polarData","setPolarData","startDateIndex","setStartDateIndex","endDateIndex","setEndDateIndex","startDateDefault","Date","endDateDefault","startDate","setStartDate","endDate","setEndDate","initializeFood","fetchCityData","sliceByArray","fetchTimeData","city_polar","dates","Set","polar_dataSets","day","push","add","colors","adelaide","brisbane","melbourne","perth","sydney","dash","split","slice","Array","from","res","foods","city_total","city_food_average","cities","dataObj","dateDiff","day1","day2","Math","ceil","array","sliceIndexArray","result","path","Doughnut","onChange","placeholder","food","key","onSelect","record","oldFoodMask","fuseConfigs","threshold","old","s","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39aa4ccf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass BarChartCity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.label;\n    this.myChart.data.datasets[2].data = this.props.value;\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      data: {\n        labels: this.props.label,\n        datasets: [\n          {\n            type: \"line\",\n            label: \"Diabetes per 10k population\",\n            backgroundColor: \"#003f5c\",\n            yAxisID: \"B\",\n            data: [12.91, 15.4, 6.42, 20.29, 9.53],\n          },\n          {\n            type: \"line\",\n            label: \"Obisity (%) among adults\",\n            backgroundColor: \"#ff6361\",\n            yAxisID: \"B\",\n            data: [20.71, 18.64, 19.52, 18.37, 16.85],\n          },\n          {\n            type: \"bar\",\n            label: \"Average food mentioned per 10000 tweets\",\n            backgroundColor: \"rgba(75,192,192,1)\",\n            yAxisID: \"A\",\n            data: this.props.value,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n          A: {\n            type: \"linear\",\n            position: \"left\",\n            title: \"# tweets\",\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            },\n          },\n          B: {\n            type: \"linear\",\n            position: \"right\",\n            grid: {\n              display: false,\n            },\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"Average food mentioned per 10000 tweets for each city\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default BarChartCity;\n","import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.labels;\n    for (const [i, city] of this.props.data.datasets.entries()) {\n      this.myChart.data.datasets[i].label = city.label;\n      this.myChart.data.datasets[i].data = city.data;\n      this.myChart.data.datasets[i].backgroundColor = city.backgroundColor;\n    }\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"bar\",\n      data: this.props.data,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: \"Average food mentioned per 10000 tweets in each city\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default BarChart;\n","import BarChartCity from \"./BarChartCity\";\nimport BarChart from \"./BarChart\";\n\nconst MixChart = ({ type, cityData, data }) => {\n  if (type === \"data\") {\n    return <BarChart data={data} />;\n  } else {\n    return (\n      <BarChartCity\n        label={Object.keys(cityData)}\n        value={Object.values(cityData)}\n      />\n    );\n  }\n};\n\nexport default MixChart;\n","import { Link } from \"react-router-dom\";\nimport {\n  FaHome,\n  FaPlayCircle,\n  FaStopCircle,\n  FaInfo,\n  FaWikipediaW,\n} from \"react-icons/fa\";\n\nconst Menu = ({ startStream, stopStream }) => {\n  return (\n    <div className=\"menu\">\n      <Link to=\"/\">\n        <button className=\"button\">\n          <FaHome /> Home\n        </button>\n      </Link>\n      <Link to=\"/about\">\n        <button className=\"button\">\n          <FaInfo /> About\n        </button>\n      </Link>\n      <Link to=\"/wiki\">\n        <button className=\"button\">\n          <FaWikipediaW /> Food Wiki\n        </button>\n      </Link>\n      <button onClick={startStream} className=\"button\">\n        <FaPlayCircle /> Start Streaming\n      </button>\n      <button onClick={stopStream} className=\"button\">\n        <FaStopCircle /> Stop Streaming\n      </button>\n    </div>\n  );\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/food1.ffe63455.jpeg\";","export default __webpack_public_path__ + \"static/media/food2.f62f6622.jpeg\";","import Menu from \"./Menu\";\nimport food1 from \"./images/food1.jpeg\";\nimport food2 from \"./images/food2.jpeg\";\n\nconst Wiki = ({ startStream, stopStream }) => {\n  return (\n    <div className=\"wiki-container\">\n      <div className=\"wiki-header\">\n        <Menu startStream={startStream} stopStream={stopStream} />\n      </div>\n      <ul className=\"b round-boarder\">\n        <div className=\"a\">B</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Barbecue\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            BBQ\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Bibimbap\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Bibimbap\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/B%C3%B6rek\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Borek\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Bread\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Bread\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hamburger\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Burger\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Burrito\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Buritto\n          </a>\n        </li>\n      </ul>\n      <ul className=\"c round-boarder\">\n        <div className=\"a\">C</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Potato_chip\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Chips\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Curry\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Curry\n          </a>\n        </li>\n      </ul>\n      <ul className=\"d round-boarder\">\n        <div className=\"a\">D</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Dumpling\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Dumplings\n          </a>\n        </li>\n      </ul>\n      <ul className=\"f round-boarder\">\n        <div className=\"a\">F</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Fried_chicken\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Fried Chicken\n          </a>\n        </li>\n      </ul>\n      <ul className=\"h round-boarder\">\n        <div className=\"a\">H</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hot_dog\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Hot dog\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hot_pot\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Hot pot\n          </a>\n        </li>\n      </ul>\n      <ul className=\"k round-boarder\">\n        <div className=\"a\">K</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Kebab\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Kebab\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Kimchi\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Kimchi\n          </a>\n        </li>\n      </ul>\n      <ul className=\"l round-boarder\">\n        <div className=\"a\">L</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Laksa\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Laksa\n          </a>\n        </li>\n      </ul>\n      <ul className=\"p round-boarder\">\n        <div className=\"a\">P</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pasta\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pasta\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pho\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pho\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pita\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pita\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pizza\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pizza\n          </a>\n        </li>\n      </ul>\n      <ul className=\"r round-boarder\">\n        <div className=\"a\">R & T</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Ramen\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Ramen\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Taco\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Taco\n          </a>\n        </li>\n      </ul>\n      <ul className=\"s round-boarder\">\n        <div className=\"a\">S</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Salad\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Salad\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Steak\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Steak\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Sushi\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Sushi\n          </a>\n        </li>\n      </ul>\n      <img src={food1} className=\"img2\" alt=\"Ingridiants\" />\n      <img src={food2} className=\"img1\" alt=\"Asian cusine\" />\n    </div>\n  );\n};\n\nexport default Wiki;\n","import Table from \"react-bootstrap/Table\";\nimport { FaQuestion, FaFire } from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\n\nconst LeaderBoard = () => {\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=1\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        setData(\n          response[\"rows\"]\n            .map((row) => ({ ...row, value: row[\"value\"][\"count\"] }))\n            .sort((a, b) => (a[\"value\"] < b[\"value\"] ? 1 : -1))\n        )\n      )\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 100000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"scroll\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"a\">Rank</th>\n            <th className=\"a\">Food Name</th>\n            <th className=\"a\">Trending Index</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{val[\"key\"]}</td>\n                <td>\n                  {val[\"value\"]} <FaFire />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.labels;\n    for (const [i, city] of this.props.data.datasets.entries()) {\n      this.myChart.data.datasets[i].label = city.label;\n      this.myChart.data.datasets[i].data = city.data;\n      this.myChart.data.datasets[i].backgroundColor = city.backgroundColor;\n      this.myChart.data.datasets[i].borderColor = city.borderColor;\n      this.myChart.data.datasets[i].borderDash = city.borderDash;\n      this.myChart.data.datasets[i].hidden = city.hidden;\n    }\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"line\",\n      data: this.props.data,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"Average food mentioned at different time in a day\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default DoughnutChart;\n","import { useState, useEffect } from \"react\";\nimport MixChart from \"./charts/MixChart\";\nimport Menu from \"./components/Menu\";\nimport Wiki from \"./components/Wiki\";\nimport LeaderBoard from \"./components/LeaderBoard\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { FaChartBar, FaChartPie, FaQuestion } from \"react-icons/fa\";\nimport DoughnutChart from \"./charts/Doughnut\";\nimport BarChart from \"./charts/BarChart\";\nimport randomColor from \"randomcolor\";\nimport DatePicker from \"react-date-picker\";\nimport ReactSearchBox from \"react-search-box\";\n\nfunction App() {\n  const [type, setType] = useState(\"cityData\");\n  const [cityData, setCityData] = useState({});\n  const [foodMask, setFoodMask] = useState({});\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [\n      { label: \"adelaide\", backgroundColor: \"#003f5c\" },\n      { label: \"brisbane\", backgroundColor: \"#58508d\" },\n      { label: \"melborne\", backgroundColor: \"#bc5090\" },\n      { label: \"perth\", backgroundColor: \"#ff6361\" },\n      { label: \"sydney\", backgroundColor: \"#ffa600\" },\n    ],\n  });\n  const [maskedData, setMaskedData] = useState({\n    labels: [],\n    datasets: [{}, {}, {}, {}, {}],\n  });\n  const [polarData, setPolarData] = useState({\n    labels: [],\n    datasets: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\n  });\n  const [startDateIndex, setStartDateIndex] = useState(0);\n  const [endDateIndex, setEndDateIndex] = useState(510);\n  const startDateDefault = new Date(\"2020-01-01\");\n  const endDateDefault = new Date();\n  const [startDate, setStartDate] = useState(startDateDefault);\n  const [endDate, setEndDate] = useState(endDateDefault);\n\n  const REFRESH_TIME = 60000;\n  const PER_TWEET = 10000;\n\n  useEffect(() => {\n    initializeFood();\n    fetchCityData();\n    const interval = setInterval(() => {\n      fetchCityData();\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, []);\n\n  // update cuisine data in each city\n  useEffect(() => {\n    //refresh masked data\n    setMaskedData({\n      labels: sliceByArray(data.labels, Object.values(foodMask)),\n      datasets: data[\"datasets\"].map((cityData) => ({\n        ...cityData,\n        data: sliceByArray(cityData[\"data\"], Object.values(foodMask)),\n      })),\n    });\n  }, [foodMask]);\n\n  useEffect(() => {\n    fetchTimeData();\n    const interval = setInterval(() => {\n      fetchTimeData();\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, [startDateIndex, endDateIndex]);\n\n  const fetchTimeData = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario2/_view/combine?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n\n      .then((response) => {\n        const city_polar = {};\n        const dates = new Set();\n\n        const polar_dataSets = [];\n        for (const day of response[\"rows\"]) {\n          if (day[\"key\"][0] + \" average polar\" in city_polar) {\n            city_polar[day[\"key\"][0] + \" average polar\"].push(\n              day[\"value\"][\"total_polarity\"] / day[\"value\"][\"total\"]\n            );\n            dates.add(day[\"key\"][1]);\n          } else {\n            city_polar[day[\"key\"][0] + \" average polar\"] = [];\n            city_polar[day[\"key\"][0] + \" average polar\"].push(\n              day[\"value\"][\"total_polarity\"] / day[\"value\"][\"total\"]\n            );\n            dates.add(day[\"key\"][1]);\n          }\n\n          if (day[\"key\"][0] + \" food average\" in city_polar) {\n            city_polar[day[\"key\"][0] + \" food average\"].push(\n              day[\"value\"][\"food\"] / day[\"value\"][\"total\"]\n            );\n            dates.add(day[\"key\"][1]);\n          } else {\n            city_polar[day[\"key\"][0] + \" food average\"] = [];\n            city_polar[day[\"key\"][0] + \" food average\"].push(\n              day[\"value\"][\"food\"] / day[\"value\"][\"total\"]\n            );\n            dates.add(day[\"key\"][1]);\n          }\n        }\n        const colors = {\n          adelaide: \"#003f5c\",\n          brisbane: \"#58508d\",\n          melbourne: \"#bc5090\",\n          perth: \"#ff6361\",\n          sydney: \"#ffa600\",\n        };\n\n        for (const city of Object.keys(city_polar)) {\n          const dash = [];\n          if (city.split(\" \")[1] === \"food\") {\n            dash.push(2);\n          }\n          polar_dataSets.push({\n            label: city,\n            data: city_polar[city].slice(startDateIndex, endDateIndex),\n            backgroundColor: colors[city.split(\" \")[0]],\n            borderColor: colors[city.split(\" \")[0]],\n            borderDash: dash,\n          });\n        }\n        setPolarData({\n          labels: Array.from(dates).slice(startDateIndex, endDateIndex),\n          datasets: polar_dataSets,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const initializeFood = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        const foods = {};\n        for (const dataObj of res[\"rows\"]) {\n          foods[dataObj[\"key\"][0]] = 0;\n        }\n        setFoodMask(foods);\n      });\n  };\n\n  const fetchCityData = async () => {\n    // get total tweets for each city\n    const city_total = {};\n    const city_food_average = {};\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/total?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        for (const city of response[\"rows\"]) {\n          city_total[city[\"key\"]] = city[\"value\"][\"total\"];\n          city_food_average[city[\"key\"]] =\n            (city[\"value\"][\"food\"] / city[\"value\"][\"total\"]) * PER_TWEET;\n        }\n        setCityData(city_food_average);\n      })\n      .catch((err) => console.error(err));\n\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        const foods = {};\n        const cities = {};\n        // add all unique food and unique cities\n        for (const dataObj of res[\"rows\"]) {\n          cities[dataObj[\"key\"][1]] = [];\n          foods[dataObj[\"key\"][0]] = 0;\n        }\n\n        for (const city of Object.keys(cities)) {\n          for (const dataObj of res[\"rows\"]) {\n            if (dataObj[\"key\"][1] === city) {\n              foods[dataObj[\"key\"][0]] =\n                (dataObj[\"value\"][\"count\"] * PER_TWEET) / city_total[city];\n            }\n          }\n          cities[city] = Object.values(foods);\n\n          // refresh foods\n          for (const key of Object.keys(foods)) {\n            foods[key] = 0;\n          }\n        }\n        const datasets = [];\n        const colors = {\n          adelaide: \"#003f5c\",\n          brisbane: \"#58508d\",\n          melbourne: \"#bc5090\",\n          perth: \"#ff6361\",\n          sydney: \"#ffa600\",\n        };\n        for (const city of Object.keys(cities)) {\n          datasets.push({\n            label: city,\n            data: cities[city],\n            backgroundColor: colors[city],\n          });\n        }\n        setData({\n          labels: Object.keys(foods),\n          datasets: datasets,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const dateDiff = (day1, day2) => {\n    const result = Math.ceil(day2 - day1) / (1000 * 60 * 60 * 24);\n    if (result > 0) {\n      return Math.ceil(day2 - day1) / (1000 * 60 * 60 * 24) + 1;\n    }\n    return 0;\n  };\n\n  const sliceByArray = (array, sliceIndexArray) => {\n    const result = [];\n    for (const [i, add] of sliceIndexArray.entries()) {\n      if (add) {\n        result.push(array[i]);\n      }\n    }\n    return result;\n  };\n\n  const addFood = (food) => {\n    setFoodMask((oldFoodMask) => ({ ...oldFoodMask, [food]: 1 }));\n    // setMaskedData({\n    //   labels: sliceByArray(data.labels, Object.values(foodMask)),\n    //   datasets: data[\"datasets\"].map((cityData) => ({\n    //     ...cityData,\n    //     data: sliceByArray(cityData[\"data\"], Object.values(foodMask)),\n    //   })),\n    // });\n  };\n\n  const clearBar = () => {\n    setFoodMask((old) => {\n      const s = {};\n      for (const key of Object.keys(old)) {\n        s[key] = 0;\n      }\n      return s;\n    });\n  };\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/about\">\n            <div className=\"grid-container\">\n              <div className=\"grid-header\">\n                <Menu />\n              </div>\n              <div className=\"chart2\">COMP90024 CCC Assignment2</div>\n            </div>\n          </Route>\n          <Route path=\"/wiki\">\n            <Wiki />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"grid-container\">\n              <div className=\"grid-header\">\n                <Menu />\n              </div>\n              <div className=\"chart1\">\n                <DoughnutChart data={polarData} />\n                Start Date:{\" \"}\n                <DatePicker\n                  value={startDate}\n                  onChange={(value) => {\n                    setStartDate(value);\n                    setStartDateIndex(dateDiff(startDateDefault, value));\n                  }}\n                />{\" \"}\n                End Date:{\" \"}\n                <DatePicker\n                  value={endDate}\n                  onChange={(value) => {\n                    setEndDate(value);\n                    setEndDateIndex(dateDiff(startDateDefault, value) + 1);\n                  }}\n                />\n              </div>\n              <div className=\"chart2\">\n                <div className=\"chart\">\n                  <MixChart cityData={cityData} data={maskedData} type={type} />\n                  <button className=\"myButton\" onClick={() => setType(\"city\")}>\n                    <FaChartBar /> By City\n                  </button>\n                  <button className=\"myButton\" onClick={() => setType(\"data\")}>\n                    <FaChartBar /> By Cuisine\n                  </button>\n                </div>\n                <div className=\"bar\">\n                  <ReactSearchBox\n                    placeholder=\"Search dish to add\"\n                    data={Object.keys(foodMask).map((food) => {\n                      return { key: food, value: food };\n                    })}\n                    onSelect={(record) => {\n                      addFood(record[\"key\"]);\n                    }}\n                    fuseConfigs={{\n                      threshold: 0.05,\n                    }}\n                  />\n                  <button className=\"myButton2\" onClick={clearBar}>\n                    Clear\n                  </button>\n                  {/* {Object.keys(foodMask).map((item) => {\n                    return <pre>{item}</pre>;\n                  })} */}\n                </div>\n              </div>\n\n              <div className=\"leader round-boarder\">\n                <div className=\"header\">Leader Board</div>\n                <LeaderBoard />\n                <div className=\"header\">\n                  Curious what are these\n                  <FaQuestion /> <br />\n                  Head to FOOD WIKI!!!\n                </div>\n              </div>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}