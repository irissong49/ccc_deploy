{"version":3,"sources":["charts/BarChartCity.js","charts/BarChart.js","charts/MixChart.js","components/Menu.js","components/images/food1.jpeg","components/images/food2.jpeg","components/Wiki.js","components/LeaderBoard.js","charts/Line1.js","charts/Line2.js","charts/MixChart2.js","components/images/about_food.jpg","App.js","reportWebVitals.js","index.js"],"names":["BarChartCity","props","chartRef","React","createRef","this","myChart","data","labels","label","datasets","value","update","Chart","current","type","backgroundColor","yAxisID","options","maintainAspectRatio","responsive","scales","A","position","title","gridLines","color","B","grid","display","plugins","text","fontSize","legend","ref","Component","BarChart","entries","i","city","MixChart","type2","cityData","data2","Object","keys","values","Menu","className","to","Wiki","startStream","stopStream","href","target","rel","src","food1","alt","food2","LeaderBoard","useState","setData","fetchData","a","fetch","method","headers","Headers","Authorization","btoa","then","response","json","map","row","sort","b","catch","err","console","error","useEffect","interval","setInterval","clearInterval","Table","striped","bordered","hover","val","index","Line1","borderColor","borderDash","hidden","elements","point","radius","Line2","MixChart2","type1","dailyData","maskedPolarData","startDate","endDate","onChange1","onChange2","onClick1","onClick2","onChange","onClick","App","setType","setType1","setType2","setCityData","foodMask","setFoodMask","setDisplay","setData2","maskedData","setMaskedData","maskedData2","setMaskedData2","Array","item","polarData","setPolarData","setDailyData","setMaskedPolarData","startDateIndex","setStartDateIndex","endDateIndex","setEndDateIndex","startDateDefault","Date","endDateDefault","setStartDate","setEndDate","PER_TWEET","HEADER","initializeFood","fetchCityData","fetchTimeData","fetchDailyData","sliceByArray","time","setTime","refresh","length","slice","timer","setTimeout","clearTimeout","Promise","res","all","city_polar","dates","Set","colors","adelaide","brisbane","melbourne","perth","sydney","polar_dataSets","day","push","add","dash","axis","hide","split","from","dataSets","2019","2020","2021","c","year","foods","city_total","city_food_average","foods2","cities","cities2","dataObj","key","datasets2","dateDiff","day1","day2","Math","ceil","array","sliceIndexArray","result","addFood","food","oldFoodMask","includes","old","deleteFood","filter","clearBar","s","path","abs","placeholder","onSelect","record","fuseConfigs","threshold","padEnd","style","cursor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5134884.chunk.js","sourcesContent":["import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass BarChartCity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.label;\n    this.myChart.data.datasets[3].data = this.props.value;\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      data: {\n        labels: this.props.label,\n        datasets: [\n          {\n            type: \"line\",\n            label: \"Diabetes per 10k population\",\n            backgroundColor: \"#003f5c\",\n            yAxisID: \"B\",\n            data: [12.91, 15.4, 6.42, 20.29, 9.53],\n          },\n          {\n            type: \"line\",\n            label: \"Obisity (%) among adults\",\n            backgroundColor: \"#ff6361\",\n            yAxisID: \"B\",\n            data: [20.71, 18.64, 19.52, 18.37, 16.85],\n          },\n          {\n            type: \"line\",\n            label: \"average income (10k)\",\n            backgroundColor: \"#ffa600\",\n            yAxisID: \"B\",\n            data: [7.7078, 7.0556, 6.9864, 8.2981, 8.1767],\n          },\n          {\n            type: \"bar\",\n            label: \"Average food mentioned per 10000 tweets\",\n            backgroundColor: \"rgba(75,192,192,1)\",\n            yAxisID: \"A\",\n            data: this.props.value,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n          A: {\n            type: \"linear\",\n            position: \"left\",\n            title: \"# tweets\",\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            },\n          },\n          B: {\n            type: \"linear\",\n            position: \"right\",\n            grid: {\n              display: false,\n            },\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"Average food mentioned per 10000 tweets for each city\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default BarChartCity;\n","import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.labels;\n    for (const [i, city] of this.props.data.datasets.entries()) {\n      this.myChart.data.datasets[i].label = city.label;\n      this.myChart.data.datasets[i].data = city.data;\n      this.myChart.data.datasets[i].backgroundColor = city.backgroundColor;\n    }\n    this.myChart.options.plugins.title.text = this.props.text;\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"bar\",\n      data: this.props.data,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: this.props.text,\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default BarChart;\n","import BarChartCity from \"./BarChartCity\";\nimport BarChart from \"./BarChart\";\n\nconst MixChart = ({ type, type2, cityData, data, data2 }) => {\n  if (type === \"data\") {\n    if (type2 === 0)\n      return (\n        <BarChart\n          data={data}\n          text={\"Average food name mentioned per 10000 tweets in each city\"}\n        />\n      );\n    else\n      return (\n        <BarChart data={data2} text={\"Average food polarity in each city\"} />\n      );\n  } else {\n    return (\n      <BarChartCity\n        label={Object.keys(cityData)}\n        value={Object.values(cityData)}\n      />\n    );\n  }\n};\n\nexport default MixChart;\n","import { Link } from \"react-router-dom\";\nimport {\n  FaHome,\n  FaInfo,\n  FaWikipediaW,\n  FaChartLine,\n  FaChartBar,\n} from \"react-icons/fa\";\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      <Link to=\"/home\">\n        <button className=\"button\">\n          <FaHome /> Home\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button className=\"button\">\n          <FaInfo /> About\n        </button>\n      </Link>\n      <Link to=\"/wiki\">\n        <button className=\"button\">\n          <FaWikipediaW /> Food Wiki\n        </button>\n      </Link>\n      <Link to=\"/timeseries\">\n        <button className=\"button\">\n          <FaChartLine /> Time Chart\n        </button>\n      </Link>\n      <Link to=\"/foodchart\">\n        <button className=\"button\">\n          <FaChartBar /> Food Chart\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/food1.ffe63455.jpeg\";","export default __webpack_public_path__ + \"static/media/food2.f62f6622.jpeg\";","import Menu from \"./Menu\";\nimport food1 from \"./images/food1.jpeg\";\nimport food2 from \"./images/food2.jpeg\";\n\nconst Wiki = ({ startStream, stopStream }) => {\n  return (\n    <div className=\"wiki-container\">\n      <div className=\"wiki-header\">\n        <Menu startStream={startStream} stopStream={stopStream} />\n      </div>\n      <ul className=\"b round-boarder\">\n        <div className=\"a\">B</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Barbecue\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            BBQ\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Bibimbap\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Bibimbap\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/B%C3%B6rek\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Borek\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Bread\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Bread\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hamburger\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Burger\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Burrito\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Buritto\n          </a>\n        </li>\n      </ul>\n      <ul className=\"c round-boarder\">\n        <div className=\"a\">C</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Potato_chip\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Chips\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Curry\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Curry\n          </a>\n        </li>\n      </ul>\n      <ul className=\"d round-boarder\">\n        <div className=\"a\">D</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Dumpling\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Dumplings\n          </a>\n        </li>\n      </ul>\n      <ul className=\"f round-boarder\">\n        <div className=\"a\">F</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Fried_chicken\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Fried Chicken\n          </a>\n        </li>\n      </ul>\n      <ul className=\"h round-boarder\">\n        <div className=\"a\">H</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hot_dog\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Hot dog\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Hot_pot\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Hot pot\n          </a>\n        </li>\n      </ul>\n      <ul className=\"k round-boarder\">\n        <div className=\"a\">K</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Kebab\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Kebab\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Kimchi\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Kimchi\n          </a>\n        </li>\n      </ul>\n      <ul className=\"l round-boarder\">\n        <div className=\"a\">L</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Laksa\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Laksa\n          </a>\n        </li>\n      </ul>\n      <ul className=\"p round-boarder\">\n        <div className=\"a\">P</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pasta\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pasta\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pho\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pho\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pita\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pita\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Pizza\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Pizza\n          </a>\n        </li>\n      </ul>\n      <ul className=\"r round-boarder\">\n        <div className=\"a\">R & T</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Ramen\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Ramen\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Taco\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Taco\n          </a>\n        </li>\n      </ul>\n      <ul className=\"s round-boarder\">\n        <div className=\"a\">S</div>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Salad\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Salad\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Steak\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Steak\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Sushi\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Sushi\n          </a>\n        </li>\n      </ul>\n      <img src={food1} className=\"img2\" alt=\"Ingridiants\" />\n      <img src={food2} className=\"img1\" alt=\"Asian cusine\" />\n    </div>\n  );\n};\n\nexport default Wiki;\n","import Table from \"react-bootstrap/Table\";\nimport { FaQuestion, FaFire } from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\n\nconst LeaderBoard = () => {\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=1\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        setData(\n          response[\"rows\"]\n            .map((row) => ({ ...row, value: row[\"value\"][\"count\"] }))\n            .sort((a, b) => (a[\"value\"] < b[\"value\"] ? 1 : -1))\n        )\n      )\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 100000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"scroll\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"a\">Rank</th>\n            <th className=\"a\">Food Name</th>\n            <th className=\"a\">Trending Index</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{val[\"key\"]}</td>\n                <td>\n                  {val[\"value\"]} <FaFire />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass Line1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.labels;\n    for (const [i, city] of this.props.data.datasets.entries()) {\n      this.myChart.data.datasets[i].label = city.label;\n      this.myChart.data.datasets[i].data = city.data;\n      this.myChart.data.datasets[i].backgroundColor = city.backgroundColor;\n      this.myChart.data.datasets[i].borderColor = city.borderColor;\n      this.myChart.data.datasets[i].borderDash = city.borderDash;\n      this.myChart.data.datasets[i].hidden = city.hidden;\n      this.myChart.data.datasets[i].yAxisID = city.yAxisID;\n    }\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"line\",\n      data: this.props.data,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        scales: {\n          A: {\n            type: \"linear\",\n            position: \"left\",\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            },\n          },\n          B: {\n            type: \"linear\",\n            position: \"right\",\n            grid: {\n              display: false,\n            },\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"Statistics for each city since 01/01/2020\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default Line1;\n","import React from \"react\";\nimport { Chart } from \"react-chartjs-2\";\n\nclass Line2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.labels;\n    for (const [i, city] of this.props.data.datasets.entries()) {\n      this.myChart.data.datasets[i].label = city.label;\n      this.myChart.data.datasets[i].data = city.data;\n      this.myChart.data.datasets[i].backgroundColor = city.backgroundColor;\n      this.myChart.data.datasets[i].borderColor = city.borderColor;\n      this.myChart.data.datasets[i].borderDash = city.borderDash;\n      this.myChart.data.datasets[i].hidden = city.hidden;\n    }\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"line\",\n      data: this.props.data,\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"Average food mentioned per 10000 tweets at different time each year each city\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\nexport default Line2;\n","import React from \"react\";\nimport Line1 from \"./Line1\";\nimport Line2 from \"./Line2\";\nimport DatePicker from \"react-date-picker\";\nimport { FaChartLine } from \"react-icons/fa\";\nfunction MixChart2({\n  type1,\n  dailyData,\n  maskedPolarData,\n  startDate,\n  endDate,\n  onChange1,\n  onChange2,\n  onClick1,\n  onClick2,\n}) {\n  if (type1 === 0) {\n    return (\n      <div className=\"chart1 round-boarder\">\n        <Line1 data={maskedPolarData} />\n        Start Date: <DatePicker value={startDate} onChange={onChange1} /> End\n        Date: <DatePicker value={endDate} onChange={onChange2} />\n        <button onClick={onClick1} className=\"myButton3\">\n          <FaChartLine /> Daily\n        </button>\n        <button onClick={onClick2} className=\"myButton3\">\n          <FaChartLine /> Hourly\n        </button>\n      </div>\n    );\n  } else if (type1 === 1) {\n    return (\n      <div className=\"chart1\">\n        <Line2 data={dailyData} />\n        <button onClick={onClick1} className=\"myButton3\">\n          <FaChartLine /> Daily\n        </button>\n        <button onClick={onClick2} className=\"myButton3\">\n          <FaChartLine /> Hourly\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default MixChart2;\n","export default __webpack_public_path__ + \"static/media/about_food.f86d2a33.jpg\";","import { useState, useEffect } from \"react\";\nimport MixChart from \"./charts/MixChart\";\nimport Menu from \"./components/Menu\";\nimport Wiki from \"./components/Wiki\";\nimport LeaderBoard from \"./components/LeaderBoard\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport {\n  FaChartBar,\n  FaQuestion,\n  FaRegTimesCircle,\n  FaUndo,\n} from \"react-icons/fa\";\nimport ReactSearchBox from \"react-search-box\";\nimport MixChart2 from \"./charts/MixChart2\";\nimport food from \"./components/images/about_food.jpg\";\n\nfunction App() {\n  const [type, setType] = useState(\"cityData\");\n  const [type1, setType1] = useState(0);\n  const [type2, setType2] = useState(0);\n  const [cityData, setCityData] = useState({});\n  const [foodMask, setFoodMask] = useState({});\n  const [display, setDisplay] = useState([]);\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [\n      { label: \"adelaide\", backgroundColor: \"#003f5c\" },\n      { label: \"brisbane\", backgroundColor: \"#58508d\" },\n      { label: \"melborne\", backgroundColor: \"#bc5090\" },\n      { label: \"perth\", backgroundColor: \"#ff6361\" },\n      { label: \"sydney\", backgroundColor: \"#ffa600\" },\n    ],\n  });\n  const [data2, setData2] = useState({\n    labels: [],\n    datasets: [\n      { label: \"adelaide\", backgroundColor: \"#003f5c\" },\n      { label: \"brisbane\", backgroundColor: \"#58508d\" },\n      { label: \"melborne\", backgroundColor: \"#bc5090\" },\n      { label: \"perth\", backgroundColor: \"#ff6361\" },\n      { label: \"sydney\", backgroundColor: \"#ffa600\" },\n    ],\n  });\n  const [maskedData, setMaskedData] = useState({\n    labels: [],\n    datasets: [{}, {}, {}, {}, {}],\n  });\n  const [maskedData2, setMaskedData2] = useState({\n    labels: [],\n    datasets: [{}, {}, {}, {}, {}],\n  });\n  const [polarData, setPolarData] = useState({\n    labels: [],\n    datasets: [...Array(20)].map((item) => ({\n      data: [],\n    })),\n  });\n  const [dailyData, setDailyData] = useState({\n    labels: [],\n    datasets: [...Array(15)].map((item) => ({\n      data: [],\n    })),\n  });\n  const [maskedPolarData, setMaskedPolarData] = useState({\n    labels: [],\n    datasets: [...Array(20)].map((item) => ({\n      data: [],\n    })),\n  });\n  const [startDateIndex, setStartDateIndex] = useState(0);\n  const [endDateIndex, setEndDateIndex] = useState(510);\n  const startDateDefault = new Date(\"2020-01-01\");\n  const endDateDefault = new Date();\n  const [startDate, setStartDate] = useState(startDateDefault);\n  const [endDate, setEndDate] = useState(endDateDefault);\n\n  const REFRESH_TIME = 60000;\n  const PER_TWEET = 10000;\n  const HEADER = {\n    method: \"get\",\n    headers: new Headers({\n      Authorization: \"Basic \" + btoa(\"admin:admin\"),\n    }),\n  };\n\n  useEffect(() => {\n    initializeFood();\n    fetchCityData();\n    fetchTimeData();\n    fetchDailyData();\n    const interval = setInterval(() => {\n      fetchCityData();\n      fetchTimeData();\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, []);\n\n  // update cuisine data in each city\n  useEffect(() => {\n    //refresh masked data\n    setMaskedData({\n      labels: sliceByArray(data.labels, Object.values(foodMask)),\n      datasets: data[\"datasets\"].map((cityData) => ({\n        ...cityData,\n        data: sliceByArray(cityData[\"data\"], Object.values(foodMask)),\n      })),\n    });\n    setMaskedData2({\n      labels: sliceByArray(data2.labels, Object.values(foodMask)),\n      datasets: data2[\"datasets\"].map((cityData) => ({\n        ...cityData,\n        data: sliceByArray(cityData[\"data\"], Object.values(foodMask)),\n      })),\n    });\n  }, [foodMask]);\n\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let refresh = 500;\n    if (maskedPolarData.labels.length > 0) {\n      refresh = REFRESH_TIME;\n    }\n    setMaskedPolarData({\n      labels: polarData.labels.slice(startDateIndex, endDateIndex),\n      datasets: polarData.datasets.map((item) => ({\n        ...item,\n        data: item.data.slice(startDateIndex, endDateIndex),\n      })),\n    });\n    const timer = setTimeout(() => {\n      setTime(time + 1);\n    }, refresh);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [time]);\n\n  useEffect(() => {\n    if (maskedPolarData.datasets.length !== 0) {\n      setMaskedPolarData({\n        labels: polarData.labels.slice(startDateIndex, endDateIndex),\n        datasets: polarData.datasets.map((item) => ({\n          ...item,\n          data: item.data.slice(startDateIndex, endDateIndex),\n        })),\n      });\n    }\n  }, [startDateIndex, endDateIndex]);\n\n  const fetchTimeData = async () => {\n    Promise.all([\n      await fetch(\n        \"http://172.26.128.24:5984/twitter/_design/scenario2/_view/combine?group_level=2\",\n        HEADER\n      ).then((res) => res.json()),\n      await fetch(\"http://172.26.128.24:5984/stats/covid\", HEADER).then((res) =>\n        res.json()\n      ),\n      await fetch(\"http://172.26.128.24:5984/stats/temp\", HEADER).then((res) =>\n        res.json()\n      ),\n    ])\n      .then((response) => {\n        const city_polar = {};\n        const dates = new Set();\n        const colors = {\n          adelaide: \"#003f5c\",\n          brisbane: \"#58508d\",\n          melbourne: \"#bc5090\",\n          perth: \"#ff6361\",\n          sydney: \"#ffa600\",\n        };\n\n        const polar_dataSets = [];\n        for (const day of response[0][\"rows\"]) {\n          if (day[\"key\"][0] + \" average polarity\" in city_polar) {\n            city_polar[day[\"key\"][0] + \" average polarity\"].push(\n              (day[\"value\"][\"total_polarity\"] / day[\"value\"][\"total\"]) *\n                PER_TWEET\n            );\n            dates.add(day[\"key\"][1]);\n          } else {\n            city_polar[day[\"key\"][0] + \" average polarity\"] = [];\n            city_polar[day[\"key\"][0] + \" average polarity\"].push(\n              (day[\"value\"][\"total_polarity\"] / day[\"value\"][\"total\"]) *\n                PER_TWEET\n            );\n            dates.add(day[\"key\"][1]);\n          }\n\n          if (day[\"key\"][0] + \" food average\" in city_polar) {\n            city_polar[day[\"key\"][0] + \" food average\"].push(\n              (day[\"value\"][\"food\"] / day[\"value\"][\"total\"]) * PER_TWEET * 10\n            );\n            dates.add(day[\"key\"][1]);\n          } else {\n            city_polar[day[\"key\"][0] + \" food average\"] = [];\n            city_polar[day[\"key\"][0] + \" food average\"].push(\n              (day[\"value\"][\"food\"] / day[\"value\"][\"total\"]) * PER_TWEET * 10\n            );\n            dates.add(day[\"key\"][1]);\n          }\n        }\n        for (const city of Object.keys(colors)) {\n          city_polar[city + \" covid cases\"] = Object.values(response[1][city]);\n        }\n        for (const city of Object.keys(colors)) {\n          city_polar[city + \" temperature\"] = Object.values(response[2][city]);\n        }\n\n        for (const city of Object.keys(city_polar)) {\n          const dash = [];\n          let axis = \"A\";\n          let hide = true;\n          let label = city + ` per ${PER_TWEET} tweets`;\n          if (city.split(\" \")[0] === \"melbourne\") {\n            hide = false;\n          }\n          if (city.split(\" \")[1] === \"food\") {\n            dash.push(2);\n            label = city + ` per ${PER_TWEET * 10} tweets`;\n          } else if (city.split(\" \")[1] === \"covid\") {\n            dash.push(15, 3, 3, 3);\n            axis = \"B\";\n            label = city;\n          } else if (city.split(\" \")[1] === \"temperature\") {\n            dash.push(20, 3, 3, 3, 3, 3, 3, 3);\n            axis = \"B\";\n            label = city;\n            hide = true;\n          }\n\n          polar_dataSets.push({\n            label: label,\n            data: city_polar[city],\n            backgroundColor: colors[city.split(\" \")[0]],\n            borderColor: colors[city.split(\" \")[0]],\n            borderDash: dash,\n            yAxisID: axis,\n            hidden: hide,\n          });\n        }\n        setPolarData({\n          labels: Array.from(dates),\n          datasets: polar_dataSets,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const fetchDailyData = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario3/_view/combine?group_level=3\",\n      HEADER\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        const city = {};\n        for (const row of res[\"rows\"]) {\n          city[row[\"key\"][0]] = {};\n        }\n        for (const row of res[\"rows\"]) {\n          city[row[\"key\"][0]][row[\"key\"][1]] = [];\n        }\n        for (const row of res[\"rows\"]) {\n          city[row[\"key\"][0]][row[\"key\"][1]].push(\n            (row[\"value\"][\"food\"] / row[\"value\"][\"total\"]) * PER_TWEET\n          );\n        }\n\n        const dataSets = [];\n        const colors = {\n          adelaide: \"#003f5c\",\n          brisbane: \"#58508d\",\n          melbourne: \"#bc5090\",\n          perth: \"#ff6361\",\n          sydney: \"#ffa600\",\n        };\n        const dash = {\n          2019: [],\n          2020: [2],\n          2021: [15, 3, 3, 3],\n        };\n\n        for (const c of Object.keys(city)) {\n          let hide = true;\n          if (c === \"melbourne\") {\n            hide = false;\n          }\n          for (const year of Object.keys(city[c])) {\n            dataSets.push({\n              label: `${c} ${year}`,\n              data: city[c][year],\n              backgroundColor: colors[c],\n              borderColor: colors[c],\n              borderDash: dash[year],\n              hidden: hide,\n            });\n          }\n        }\n        setDailyData({\n          labels: [...Array(23).keys()],\n          datasets: dataSets,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const initializeFood = async () => {\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        const foods = {};\n        for (const dataObj of res[\"rows\"]) {\n          foods[dataObj[\"key\"][0]] = 0;\n        }\n        setFoodMask(foods);\n      });\n  };\n\n  const fetchCityData = async () => {\n    // get total tweets for each city\n    const city_total = {};\n    const city_food_average = {};\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/total?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        for (const city of response[\"rows\"]) {\n          city_total[city[\"key\"]] = city[\"value\"][\"total\"];\n          city_food_average[city[\"key\"]] =\n            (city[\"value\"][\"food\"] / city[\"value\"][\"total\"]) * PER_TWEET;\n        }\n        setCityData(city_food_average);\n      })\n      .catch((err) => console.error(err));\n\n    await fetch(\n      \"http://172.26.128.24:5984/twitter/_design/scenario1/_view/count?group_level=2\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: \"Basic \" + btoa(\"admin:admin\"),\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        const foods = {};\n        const foods2 = {}; // for polarity\n        const cities = {};\n        const cities2 = {}; // for polarity\n        // add all unique food and unique cities\n        for (const dataObj of res[\"rows\"]) {\n          cities[dataObj[\"key\"][1]] = [];\n          cities2[dataObj[\"key\"][1]] = [];\n          foods[dataObj[\"key\"][0]] = 0;\n          foods2[dataObj[\"key\"][0]] = 0;\n        }\n\n        for (const city of Object.keys(cities)) {\n          for (const dataObj of res[\"rows\"]) {\n            if (dataObj[\"key\"][1] === city) {\n              foods[dataObj[\"key\"][0]] =\n                (dataObj[\"value\"][\"count\"] * PER_TWEET) / city_total[city];\n              foods2[dataObj[\"key\"][0]] =\n                dataObj[\"value\"][\"polarity\"] / dataObj[\"value\"][\"count\"];\n            }\n          }\n          cities[city] = Object.values(foods);\n          cities2[city] = Object.values(foods2);\n\n          // refresh foods\n          for (const key of Object.keys(foods)) {\n            foods[key] = 0;\n            foods2[key] = 0;\n          }\n        }\n        const datasets = [];\n        const datasets2 = [];\n        const colors = {\n          adelaide: \"#003f5c\",\n          brisbane: \"#58508d\",\n          melbourne: \"#bc5090\",\n          perth: \"#ff6361\",\n          sydney: \"#ffa600\",\n        };\n\n        for (const city of Object.keys(cities)) {\n          datasets.push({\n            label: city,\n            data: cities[city],\n            backgroundColor: colors[city],\n          });\n        }\n\n        for (const city of Object.keys(cities2)) {\n          datasets2.push({\n            label: city,\n            data: cities2[city],\n            backgroundColor: colors[city],\n          });\n        }\n        setData({\n          labels: Object.keys(foods),\n          datasets: datasets,\n        });\n        setData2({\n          labels: Object.keys(foods2),\n          datasets: datasets2,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const dateDiff = (day1, day2) => {\n    const result = Math.ceil(day2 - day1) / (1000 * 60 * 60 * 24);\n    if (result > 0) {\n      return Math.ceil(day2 - day1) / (1000 * 60 * 60 * 24) + 1;\n    }\n    return 0;\n  };\n\n  const sliceByArray = (array, sliceIndexArray) => {\n    const result = [];\n    for (const [i, add] of sliceIndexArray.entries()) {\n      if (add) {\n        result.push(array[i]);\n      }\n    }\n    return result;\n  };\n\n  const addFood = (food) => {\n    setFoodMask((oldFoodMask) => ({ ...oldFoodMask, [food]: 1 }));\n    if (!display.includes(food)) {\n      setDisplay((old) => [...old, food]);\n    }\n  };\n\n  const deleteFood = (food) => {\n    setFoodMask((oldFoodMask) => ({ ...oldFoodMask, [food]: 0 }));\n    setDisplay((old) => old.filter((item) => item !== food));\n  };\n\n  const clearBar = () => {\n    setFoodMask((old) => {\n      const s = {};\n      for (const key of Object.keys(old)) {\n        s[key] = 0;\n      }\n      return s;\n    });\n    setDisplay([]);\n  };\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/wiki\">\n            <Wiki />\n          </Route>\n          <Route path=\"/foodchart\">\n            <div className=\"grid-container3\">\n              <Menu />\n              <div className=\"chart2\">\n                <div className=\"chart\">\n                  <MixChart\n                    cityData={cityData}\n                    data={maskedData}\n                    data2={maskedData2}\n                    type={type}\n                    type2={type2}\n                  />\n                  <button className=\"myButton\" onClick={() => setType(\"city\")}>\n                    <FaChartBar /> By City\n                  </button>\n                  <button className=\"myButton\" onClick={() => setType(\"data\")}>\n                    <FaChartBar /> By Cuisine\n                  </button>\n                  <button\n                    className=\"myButton\"\n                    onClick={() => setType2((old) => Math.abs(old - 1))}\n                  >\n                    <FaUndo /> {!type2 ? \"Polarity\" : \"Count\"}\n                  </button>\n                </div>\n                <div className=\"bar\">\n                  <ReactSearchBox\n                    placeholder=\"Search dish to add\"\n                    data={Object.keys(foodMask).map((food) => {\n                      return { key: food, value: food };\n                    })}\n                    onSelect={(record) => {\n                      addFood(record[\"key\"]);\n                    }}\n                    fuseConfigs={{\n                      threshold: 0.05,\n                    }}\n                  />\n                  <button className=\"myButton2\" onClick={clearBar}>\n                    Clear\n                  </button>\n                  {display.map((item, index) => {\n                    return (\n                      <pre key={index}>\n                        {item.padEnd(13)}\n                        <FaRegTimesCircle\n                          style={{ color: \"red\", cursor: \"pointer\" }}\n                          onClick={() => deleteFood(item)}\n                        />\n                      </pre>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/timeseries\">\n            <div className=\"grid-container2\">\n              <Menu />\n              <MixChart2\n                type1={type1}\n                dailyData={dailyData}\n                maskedPolarData={maskedPolarData}\n                startDate={startDate}\n                endDate={endDate}\n                onChange1={(value) => {\n                  setStartDate(value);\n                  setStartDateIndex(dateDiff(startDateDefault, value));\n                }}\n                onChange2={(value) => {\n                  setEndDate(value);\n                  setEndDateIndex(dateDiff(startDateDefault, value) + 1);\n                }}\n                onClick1={() => {\n                  setType1(0);\n                }}\n                onClick2={() => {\n                  setType1(1);\n                }}\n              />\n            </div>\n          </Route>\n          <Route path=\"/home\">\n            <div className=\"grid-container\">\n              <div className=\"grid-header\">\n                <Menu />\n              </div>\n              <MixChart2\n                type1={type1}\n                dailyData={dailyData}\n                maskedPolarData={maskedPolarData}\n                startDate={startDate}\n                endDate={endDate}\n                onChange1={(value) => {\n                  setStartDate(value);\n                  setStartDateIndex(dateDiff(startDateDefault, value));\n                }}\n                onChange2={(value) => {\n                  setEndDate(value);\n                  setEndDateIndex(dateDiff(startDateDefault, value) + 1);\n                }}\n                onClick1={() => {\n                  setType1(0);\n                }}\n                onClick2={() => {\n                  setType1(1);\n                }}\n              />\n              <div className=\"chart2\">\n                <div className=\"chart\">\n                  <MixChart\n                    cityData={cityData}\n                    data={maskedData}\n                    data2={maskedData2}\n                    type={type}\n                    type2={type2}\n                  />\n                  <button className=\"myButton\" onClick={() => setType(\"city\")}>\n                    <FaChartBar /> By City\n                  </button>\n                  <button className=\"myButton\" onClick={() => setType(\"data\")}>\n                    <FaChartBar /> By Cuisine\n                  </button>\n                  <button\n                    className=\"myButton\"\n                    onClick={() => setType2((old) => Math.abs(old - 1))}\n                  >\n                    <FaUndo /> {!type2 ? \"Polarity\" : \"Count\"}\n                  </button>\n                </div>\n                <div className=\"bar\">\n                  <ReactSearchBox\n                    placeholder=\"Search dish to add\"\n                    data={Object.keys(foodMask).map((food) => {\n                      return { key: food, value: food };\n                    })}\n                    onSelect={(record) => {\n                      addFood(record[\"key\"]);\n                    }}\n                    fuseConfigs={{\n                      threshold: 0.05,\n                    }}\n                  />\n                  <button className=\"myButton2\" onClick={clearBar}>\n                    Clear\n                  </button>\n                  {display.map((item, index) => {\n                    return (\n                      <pre key={index}>\n                        {item.padEnd(13)}\n                        <FaRegTimesCircle\n                          style={{ color: \"red\", cursor: \"pointer\" }}\n                          onClick={() => deleteFood(item)}\n                        />\n                      </pre>\n                    );\n                  })}\n                </div>\n              </div>\n\n              <div className=\"leader round-boarder\">\n                <div className=\"header\">Leader Board</div>\n                <LeaderBoard />\n                <div className=\"header\">\n                  Curious what are these\n                  <FaQuestion /> <br />\n                  Head to FOOD WIKI!!!\n                </div>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"grid-container\">\n              <div className=\"grid-header\">\n                <Menu />\n              </div>\n              <div className=\"chart1\">\n                <div className=\"header\">\n                  Welcome to COMP90024 ‘Australia and Food’ project webpage!\n                </div>\n                <br />\n                <p className=\"text\">\n                  Being an immigration country with a multicultural environment,\n                  Australia welcomes people and cultures from all over the\n                  world. For every culture, there is a unique food cuisine of\n                  their own, which to some extent represents the culture itself.\n                  Therefore, food seems to be like a symbol representing\n                  Australia’s diversity and we choose to study how different\n                  food are related to Australian people’s daily life.\n                </p>\n                <p className=\"text\">\n                  We attempts to find a large quantity of tweets relating to\n                  food in Australia. This webpage provides comprehensive data\n                  visualisation of these tweets and illustrates how Australia\n                  people’s lifestyle and food preference pattern are closely\n                  related.\n                </p>\n                <p className=\"text\">\n                  The food chart presents how often people mention foods on\n                  Twitter and what’s people’s average emotion/sentiment towards\n                  each type of food on the aggregate level. The time chart\n                  demonstrades how people’s love to food changes dynamically\n                  over time (each day and each hour in a day). You can choose to\n                  click on the labels to decide which combinations of lines/bars\n                  you want to see. We also constructed a leader board to rank\n                  the favourite food for Australians.\n                </p>\n                <p className=\"text\">\n                  On the background, the data are continously updating and this\n                  webpage is refreshed every minute. Feel free to play with the\n                  charts, try different combinations and search for the food you\n                  are interested in!\n                </p>\n                <br />\n                <p className=\"end\">——— Cluster and Cloud Computing Team 23</p>\n              </div>\n              <img src={food} className=\"leader\" alt=\"Multicutural food\" />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}